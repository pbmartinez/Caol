@page "/comercial-performance"
@using Application.Dtos
@using BlazorApp.Shared.Components

@inject HttpClient Http
@inject IStringLocalizer<Resource> Localizer


<MudDatePicker Label="Inicio" @bind-Date="StartDate" FixDay=1/>

<MudDatePicker Label="Fin" @bind-Date="EndDate" FixDay=1/>

@if(Usuarios != null && Usuarios.Count > 0)
{
    <MudSelect T="string" 
               Label="Vendedor" 
               MultiSelection="true" @bind-Value="value" @bind-SelectedValues="options"
               Clearable="true"
               SelectAll="true"
               Placeholder="Select vendor ..."
               Dense="true"
               >
    @foreach (var item in Usuarios)
    {
        <MudSelectItem T="string" Value="@item.CoUsuario">@item.NoUsuario</MudSelectItem>
    }
    </MudSelect>

}


<MudButton OnClick="ShowPizzaAsync"> Show Pizza </MudButton>

@if (Aporte.Valores != null && Aporte.Valores.Count != 0)
{
    <PieChart Aporte=Aporte></PieChart>
}

@code {
    private string value { get; set; } = "Nothing selected";
    private IEnumerable<string> options { get; set; } = new HashSet<string>();
    DateTime? StartDate;
    DateTime? EndDate;
    List<CaoUsuarioDto> Usuarios = new List<CaoUsuarioDto> ();
    AporteRecetaLiquidaDto Aporte = default;
    protected override async Task OnInitializedAsync()
    {
        StartDate = DateTime.Today.AddDays(-DateTime.Today.Day+1);
        EndDate = DateTime.Today.AddDays(-DateTime.Today.Day+1).AddMonths(1);

        var us = await Http.GetFromJsonAsync<List<CaoUsuarioDto>>("api/usuarios");
        Usuarios = us ?? new List<CaoUsuarioDto>();
    }

    private async Task ShowPizzaAsync()
    {
        var link = $"api/facturas/pizza?startDate={StartDate}&endDate={EndDate}&coUsuarios={string.Join(',', options)}";
        Aporte = await Http.GetFromJsonAsync<AporteRecetaLiquidaDto>(link) ;
    }
}

