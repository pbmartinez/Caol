@using Application.Dtos
@using Domain.Localization
@using Microsoft.Extensions.Localization
@inject HttpClient Http
@inject IStringLocalizer<Resource> Localizer

@try
{
    <ApexChart TItem="UsuarioRecetasDto"
           Title="Order Net Value">

        @for (var i = 0; i < UsuarioPerformance.UsuarioRecetas.Count; i++)
        {
            var usuario = UsuarioPerformance.UsuarioRecetas[i];

            <ApexPointSeries TItem="ValorAporteDto"
                     Items="@GetValorAporteDtos(usuario)"
                     Name="@usuario.Name"
                     XValue="@(e => e.AnnoMes)"
                     YAggregate="@(e => e.Sum(v => (decimal)v.RecetaLiquida))"
                     OrderByDescending="e=>e.Y"
                     SeriesType="SeriesType.Bar" />
        }

    </ApexChart>
}
catch (Exception es)
{
    var ex = es;
}


@code {
    [EditorRequired]
    [Parameter] public AporteMensualDto UsuarioPerformance { get; set; } = null!;
    [Parameter] public DateTime StartDate { get; set; }
    [Parameter] public DateTime EndDate { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private List<ValorAporteDto> GetValorAporteDtos(UsuarioRecetasDto usuario)
    {
        var list = new List<ValorAporteDto>();
        for (int i = 0; i < usuario.Data.Length; i++)
        {
            list.Add(new ValorAporteDto
                {
                    Name = usuario.Name,
                    RecetaLiquida = usuario.Data[i],
                    AnnoMes = UsuarioPerformance.Months[i].ToShortDateString()
                });
        }

        return list;
    }
}
